Resources:
  imagecache00CBB87B:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache/Resource
  addLambdaHandlerServiceRole37B65F50:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ImageCacheStack/addLambdaHandler/ServiceRole/Resource
  addLambdaHandlerServiceRoleDefaultPolicy495E3C8A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - imagecache00CBB87B
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: addLambdaHandlerServiceRoleDefaultPolicy495E3C8A
      Roles:
        - Ref: addLambdaHandlerServiceRole37B65F50
    Metadata:
      aws:cdk:path: ImageCacheStack/addLambdaHandler/ServiceRole/DefaultPolicy/Resource
  addLambdaHandler9017B0E5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3Bucket7E8DE0E0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3VersionKeyBA0B98B5
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3VersionKeyBA0B98B5
      Role:
        Fn::GetAtt:
          - addLambdaHandlerServiceRole37B65F50
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: imagecache00CBB87B
      Handler: add.handler
      Runtime: nodejs14.x
    DependsOn:
      - addLambdaHandlerServiceRoleDefaultPolicy495E3C8A
      - addLambdaHandlerServiceRole37B65F50
    Metadata:
      aws:cdk:path: ImageCacheStack/addLambdaHandler/Resource
      aws:asset:path: asset.beeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782e
      aws:asset:property: Code
  testLambdaHandlerServiceRole75F44D38:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ImageCacheStack/testLambdaHandler/ServiceRole/Resource
  testLambdaHandler8C2F2E96:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3Bucket7E8DE0E0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3VersionKeyBA0B98B5
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3VersionKeyBA0B98B5
      Role:
        Fn::GetAtt:
          - testLambdaHandlerServiceRole75F44D38
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: imagecache00CBB87B
      Handler: test.handler
      Runtime: nodejs14.x
    DependsOn:
      - testLambdaHandlerServiceRole75F44D38
    Metadata:
      aws:cdk:path: ImageCacheStack/testLambdaHandler/Resource
      aws:asset:path: asset.beeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782e
      aws:asset:property: Code
  imagecacheapiFD7A7E80:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Caches images and serve with very long expiry
      Name: image cache
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Resource
  imagecacheapiCloudWatchRoleEBD298C5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/CloudWatchRole/Resource
  imagecacheapiAccountA622E2E7:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - imagecacheapiCloudWatchRoleEBD298C5
          - Arn
    DependsOn:
      - imagecacheapiFD7A7E80
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Account
  imagecacheapiDeployment60CB932C36a2df0d7522e7e615d50311f1777aa3:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: imagecacheapiFD7A7E80
      Description: Automatically created by the RestApi construct
    DependsOn:
      - imagecacheapiaddPOST42377CE4
      - imagecacheapiadd1BE62864
      - imagecacheapitestGET5CE8F907
      - imagecacheapitest3BB7C210
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Deployment/Resource
  imagecacheapiDeploymentStageprod41840611:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: imagecacheapiFD7A7E80
      DeploymentId:
        Ref: imagecacheapiDeployment60CB932C36a2df0d7522e7e615d50311f1777aa3
      StageName: prod
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/DeploymentStage.prod/Resource
  imagecacheapiadd1BE62864:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - imagecacheapiFD7A7E80
          - RootResourceId
      PathPart: add
      RestApiId:
        Ref: imagecacheapiFD7A7E80
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/add/Resource
  imagecacheapiaddPOSTApiPermissionImageCacheStackimagecacheapiEF352162POSTadd401EA561:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - addLambdaHandler9017B0E5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: imagecacheapiFD7A7E80
            - /
            - Ref: imagecacheapiDeploymentStageprod41840611
            - /POST/add
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/add/POST/ApiPermission.ImageCacheStackimagecacheapiEF352162.POST..add
  imagecacheapiaddPOSTApiPermissionTestImageCacheStackimagecacheapiEF352162POSTadd61437E26:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - addLambdaHandler9017B0E5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: imagecacheapiFD7A7E80
            - /test-invoke-stage/POST/add
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/add/POST/ApiPermission.Test.ImageCacheStackimagecacheapiEF352162.POST..add
  imagecacheapiaddPOST42377CE4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: imagecacheapiadd1BE62864
      RestApiId:
        Ref: imagecacheapiFD7A7E80
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - addLambdaHandler9017B0E5
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/add/POST/Resource
  imagecacheapitest3BB7C210:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - imagecacheapiFD7A7E80
          - RootResourceId
      PathPart: test
      RestApiId:
        Ref: imagecacheapiFD7A7E80
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/test/Resource
  imagecacheapitestGETApiPermissionImageCacheStackimagecacheapiEF352162GETtest7136850C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - testLambdaHandler8C2F2E96
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: imagecacheapiFD7A7E80
            - /
            - Ref: imagecacheapiDeploymentStageprod41840611
            - /GET/test
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/test/GET/ApiPermission.ImageCacheStackimagecacheapiEF352162.GET..test
  imagecacheapitestGETApiPermissionTestImageCacheStackimagecacheapiEF352162GETtestD28C7E1C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - testLambdaHandler8C2F2E96
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: imagecacheapiFD7A7E80
            - /test-invoke-stage/GET/test
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/test/GET/ApiPermission.Test.ImageCacheStackimagecacheapiEF352162.GET..test
  imagecacheapitestGET5CE8F907:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: imagecacheapitest3BB7C210
      RestApiId:
        Ref: imagecacheapiFD7A7E80
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - testLambdaHandler8C2F2E96
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ImageCacheStack/image-cache-api/Default/test/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QS07DMBCGz9K945KCxJa2iB0iClxgYg/BTWxHHpsqsnJ3bIdWWc03r38eNa8PB/6we4ErVUIO+yisQx4/PYiBtUg2OIHsSIQ+xXplena2hrwLwrPzt2nAgUaPLjsfwU+hhO+diVO9VF5Zs7A8JcrZgLay4/ELurGUFFjYCLqTwONbMCI35NSWG3RaERUpBZrH1q79xTZ2VGIudYUWRo8V5M2JlwOSz09BDOhPQMhgUj14vMKchJD8cVL/q9/wKIQNxrNXnEY7azTlto2XX1IWWOF2dZHfvuDO7+h/rMyhlZZlYcZK5Bfa/9ZPvH7m9e5CSlUuDVYaebvaP98dfZ+pAQAA
    Metadata:
      aws:cdk:path: ImageCacheStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3Bucket7E8DE0E0:
    Type: String
    Description: S3 bucket for asset "beeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782e"
  AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eS3VersionKeyBA0B98B5:
    Type: String
    Description: S3 key for asset version "beeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782e"
  AssetParametersbeeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782eArtifactHash87A0231E:
    Type: String
    Description: Artifact hash for asset "beeaa749e012b5921018077f0a5e4fc3ab271ef1c191bd12a82aa9a92148782e"
Outputs:
  imagecacheapiEndpoint73BA52FC:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: imagecacheapiFD7A7E80
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: imagecacheapiDeploymentStageprod41840611
          - /
  APIURL:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: imagecacheapiFD7A7E80
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: imagecacheapiDeploymentStageprod41840611
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

